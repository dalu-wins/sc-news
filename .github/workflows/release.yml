name: Build and Release Compose App

on:
  push: {}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout
      - name: Checkout repository
        uses: actions/checkout@v5

      # 2. Setup JDK
      - name: Set up JDK 17
        uses: actions/setup-java@v5
        with:
          distribution: temurin
          java-version: 17

      # 4. Cache Gradle
      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      
      - name: Decode Keystore
        run: echo "${{ secrets.APP_KEYSTORE_B64 }}" | base64 --decode > app/keystore.jks
        
      - name: Build Release APK
        env:
          APP_KEYSTORE_PASSWORD: ${{ secrets.APP_KEYSTORE_PASSWORD }}
          APP_KEY_ALIAS: ${{ secrets.APP_KEY_ALIAS }}
          APP_KEY_PASSWORD: ${{ secrets.APP_KEY_PASSWORD }}
        run: ./gradlew assembleRelease

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: app/build/outputs/apk/release/*.apk

  release:
    name: Create Release-Please Release & Upload APK
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5

      - name: Download APK
        uses: actions/download-artifact@v3
        with:
          name: app-release
          path: app-release

      - uses: google-github-actions/release-please-action@v3.1.2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          release-type: android
          package-name: com.daluwi.sc_news

      - name: Upload APK to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: app-release/*.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

